{
    "name": "aaronsaray/laravel-boot",
    "description": "Laravel Framework and Tools",
    "license": "MIT",
    "type": "project",
    "require": {
        "php": "^7.2",
        "fideloper/proxy": "^4.1",
        "laravel/framework": "5.8.29"
    },
    "require-dev": {
        "aaronsaray/laravel-test-helpers": "^1.1",
        "barryvdh/laravel-ide-helper": "2.6.2",
        "doctrine/dbal": "^2.8",
        "filp/whoops": "^2.4",
        "fzaninotto/faker": "^1.8",
        "mockery/mockery": "^1.2",
        "nunomaduro/collision": "^3.0",
        "nunomaduro/larastan": "^0.3.4",
        "ocramius/package-versions": "^1.4",
        "phploc/phploc": "^5.0",
        "phpunit/phpunit": "^8.1",
        "roave/security-advisories": "dev-master",
        "sebastian/phpcpd": "^4.1",
        "squizlabs/php_codesniffer": "^3.4"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/"
        },
        "classmap": [
            "database/seeds",
            "database/factories"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "extra": {
        "laravel": {
            "dont-discover": [
                "barryvdh/laravel-ide-helper"
            ]
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@php -r \"file_exists('docker-compose.yml') || copy('docker-compose.yml.example', 'docker-compose.yml');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate"
        ],
        "test": [
            "phpunit --colors=always"
        ],
        "test-coverage": [
            "phpunit --colors=always --coverage-html=tests/html-coverage"
        ],
        "ide-helper-update": [
            "@php artisan clear-compiled",
            "@php artisan ide-helper:generate",
            "@php artisan ide-helper:meta",
            "@php artisan ide-helper:models --write"
        ],
        "phploc": [
            "phploc app bootstrap config database routes tests > docs/phploc.txt"
        ],
        "phpcpd": [
            "phpcpd app bootstrap config database routes tests"
        ],
        "phpcs": [
            "phpcs"
        ],
        "larastan": [
            "@php artisan code:analyse  --level=max --paths=\"app,tests\""
        ]
    },
    "scripts-descriptions": {
        "test": "Run all PHPUnit tests.",
        "test-coverage": "Run all PHPUnit tests, put HTML coverage in tests/html-coverage",
        "ide-helper-update": "Runs the ide-helper generate, meta and models command",
        "phpdoc": "Runs phpDocumentor phpdoc generation and puts it in docs/phpdoc",
        "phploc": "Runs phploc and puts output in docs/phploc.txt",
        "phpcpd": "Runs phpcpd copy and paste detector",
        "phpcs": "Runs phpcs with PSR12 on app and tests folder",
        "larastan": "Run the Laravel-specific version of PHPStan"
    },
    "suggest": {
        "aaronsaray/laravel-api-tools": "Tools for a laravel api install.",
        "aaronsaray/laravel-legacy-passwords": "For migrating over old passwords",
        "owen-it/laravel-auditing": "For auditing eloquent models",
        "spatie/laravel-cors": "CORS support for API",
        "spatie/laravel-permission": "Permission System",
        "zircote/swagger-php": "Open API Generation for API"
    },
    "config": {
        "preferred-install": "dist",
        "sort-packages": true,
        "optimize-autoloader": true
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
